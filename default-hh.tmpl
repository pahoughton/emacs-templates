;;
;; default-hh.tmpl - 02/21/2002 08:00
;;
;; Copyright (c) 2013 Paul Houghton <paul4hough@gmail.com>


(let* ((define-name (concat "_" (replace-regexp-in-string
				  "\\.h$"
				  "_h_"
				  file-name )))
       (class-name file-base-name)
       )

  (insert
"#ifndef " define-name "
#define " define-name "
" (template-insert-fragment "default-c-block.tmpl") "
#include <iostream>

#if defined( " (upcase product-dir-name) "_DEBUG )
#define inline
#endif


class " class-name "
{

public:

  "class-name"( void );

  virtual ~"class-name"( void );

  virtual bool	    	good( void ) const;
  virtual const char * 	error( void ) const;
  virtual const char *	getClassName( void ) const;
  virtual ostream &     dumpInfo( ostream &	dest = cerr,
				  const char *  prefix = \"    \",
                                  bool          showVer = true ) const;

protected:

private:

  " class-name "( const " class-name " & from );
  " class-name " & operator =( const " class-name " & from );

};

#if !defined( inline )
#include <"class-name".ii>
#else
#undef inline

ostream &
operator << ( ostream & dest, const "class-name" & src );

istream &
operator >> ( istream & src, const "class-name" & dest );


#endif

#endif /* ! def " define-name " */
")
  (beginning-of-buffer)
  )

;;; Local Variables:
;;; mode:Emacs-Lisp
;;; end:

